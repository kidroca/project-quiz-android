package com.example.kidroca.mylittlequizapp.main.quizzes;

import android.content.Context;
import android.net.Uri;
import android.os.Bundle;
import android.support.v4.app.Fragment;
import android.support.v4.widget.SwipeRefreshLayout;
import android.support.v7.widget.LinearLayoutManager;
import android.support.v7.widget.RecyclerView;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;

import com.example.kidroca.mylittlequizapp.R;
import com.example.kidroca.mylittlequizapp.data.callbacks.QuizzesLoadedListener;
import com.example.kidroca.mylittlequizapp.data.tasks.TaskLoadQuizzes;
import com.example.kidroca.mylittlequizapp.main.quizzes.models.quiz.Quiz;

import java.util.ArrayList;
import java.util.List;

import butterknife.ButterKnife;
import butterknife.InjectView;


/**
 * A simple {@link Fragment} subclass.
 * Activities that contain this fragment must implement the
 * {@link QuizzesDrawerFragment.OnFragmentInteractionListener} interface
 * to handle interaction events.
 * Use the {@link QuizzesDrawerFragment#newInstance} factory method to
 * create an instance of this fragment.
 */
public class QuizzesDrawerFragment extends Fragment
        implements SwipeRefreshLayout.OnRefreshListener, QuizzesLoadedListener {

    //The key used to store arraylist of quiz objects to and from parcelable
    private static final String KEY_QUIZZES = "quizzes";

    private ArrayList<Quiz> mQuizzes = new ArrayList<>();

    private AdapterQuizzes mAdapter;

    @InjectView(R.id.swipeQuizzes)
    SwipeRefreshLayout mSwipeRefreshLayout;

    // text view containing error messages generated by Volley
    @InjectView(R.id.textVolleyError)
    TextView mTextError;

    @InjectView(R.id.quizzesListDraler)
    RecyclerView mRecyclerQuizzes;

    private OnFragmentInteractionListener mListener;

    public QuizzesDrawerFragment() {
        // Required empty public constructor
    }

    /**
     * Use this factory method to create a new instance of
     * this fragment using the provided parameters.
     *
     * @param param1 Parameter 1.
     * @param param2 Parameter 2.
     * @return A new instance of fragment QuizzesDrawerFragment.
     */
    // TODO: Rename and change types and number of parameters
    public static QuizzesDrawerFragment newInstance(String param1, String param2) {
        QuizzesDrawerFragment fragment = new QuizzesDrawerFragment();
        Bundle args = new Bundle();

        //put any extra arguments that you may want to supply to this fragment
        fragment.setArguments(args);
        return fragment;
    }

    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container,
                             Bundle savedInstanceState) {

        // Inflate the layout for this fragment
        View layout = inflater.inflate(R.layout.fragment_quizzes_drawer, container, false);
        ButterKnife.inject(this, layout);

        mSwipeRefreshLayout.setOnRefreshListener(this);
        mRecyclerQuizzes.setLayoutManager(new LinearLayoutManager(getActivity()));
        mAdapter = new AdapterQuizzes(getActivity());
        mRecyclerQuizzes.setAdapter(mAdapter);

        if (savedInstanceState != null) {
            // if this fragment starts after a rotation or configuration change,
            // load the existing quizzes from a parcelable
            mQuizzes = savedInstanceState.getParcelableArrayList(KEY_QUIZZES);
        } else {
            new TaskLoadQuizzes(this).execute();
        }

        return layout;
    }

    // TODO: Rename method, update argument and hook method into UI event
    public void onButtonPressed(Uri uri) {
        if (mListener != null) {
            mListener.onFragmentInteraction(uri);
        }
    }

    @Override
    public void onAttach(Context context) {
        super.onAttach(context);
        if (context instanceof OnFragmentInteractionListener) {
            mListener = (OnFragmentInteractionListener) context;
        } else {
            throw new RuntimeException(context.toString()
                    + " must implement OnFragmentInteractionListener");
        }
    }

    @Override
    public void onDetach() {
        super.onDetach();
        mListener = null;
    }

    @Override
    public void onRefresh() {
        //reload the quizzes
        //new TaskLoadMoviesBoxOffice(this).execute();
    }

    @Override
    public void onQuizzesLoaded(ArrayList<Quiz> quizzes) {
        if (mSwipeRefreshLayout.isRefreshing()) {
            mSwipeRefreshLayout.setRefreshing(false);
        }

        mAdapter.setQuizzes(quizzes);
    }

    /**
     * This interface must be implemented by activities that contain this
     * fragment to allow an interaction in this fragment to be communicated
     * to the activity and potentially other fragments contained in that
     * activity.
     * <p>
     * See the Android Training lesson <a href=
     * "http://developer.android.com/training/basics/fragments/communicating.html"
     * >Communicating with Other Fragments</a> for more information.
     */
    public interface OnFragmentInteractionListener {
        // TODO: Update argument type and name
        void onFragmentInteraction(Uri uri);
    }

}
